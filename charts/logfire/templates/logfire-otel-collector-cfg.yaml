{{- $serviceName := "logfire-otel-collector" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  labels:
    {{- include "logfire.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $serviceName }}
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: "0.0.0.0:4317"
          http:
            endpoint: "0.0.0.0:4318"

    exporters:
      debug:
      otlphttp:
        endpoint: http://logfire-ff-ingest:8012
        tls:
          insecure: true
        headers:
          Authorization: "Bearer ${LOGFIRE_META_WRITE_TOKEN}"
      {{- if include "isPrometheusExporterEnabled" . | trim | eq "true" }}
      {{- with .Values.otel_collector.prometheus }}
      prometheus:
        endpoint: {{ printf "%s:%s" .endpoint (.port | toString) }}
        send_timestamps: {{ .send_timestamp }}
        metric_expiration: {{ .metric_expiration }}
        enable_open_metrics: {{ .enable_open_metrics }}
        add_metric_suffixes: {{ .add_metric_suffixes }}
        {{- with .resource_to_telemetry_conversion }}
        resource_to_telemetry_conversion:
        {{- . | toYaml | nindent 12 }}
        {{- end }}
      {{- end }}
      {{- end }}


    processors:
      memory_limiter:
        check_interval: 1s
        limit_mib: 512
        spike_limit_mib: 128
      batch:
        timeout: 1s
        send_batch_size: 2048
      k8sattributes:
        extract:
          metadata:
            - k8s.cluster.uid
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.node.name
            - k8s.namespace.name
            - k8s.pod.start_time
            - k8s.replicaset.name
            - k8s.replicaset.uid
            - k8s.daemonset.name
            - k8s.daemonset.uid
            - k8s.job.name
            - k8s.job.uid
            - k8s.cronjob.name
            - k8s.statefulset.name
            - k8s.statefulset.uid
            - container.image.name
            - container.image.tag
            - container.id
            - k8s.container.name
            - container.image.name
            - container.image.tag
            - container.id
          labels:
            - tag_name: kube_app_name
              key: app.kubernetes.io/name
              from: pod
            - tag_name: kube_app_instance
              key: app.kubernetes.io/instance
              from: pod
            - tag_name: kube_app_version
              key: app.kubernetes.io/version
              from: pod
            - tag_name: kube_app_component
              key: app.kubernetes.io/component
              from: pod
            - tag_name: kube_app_part_of
              key: app.kubernetes.io/part-of
              from: pod
            - tag_name: kube_app_managed_by
              key: app.kubernetes.io/managed-by
              from: pod
    extensions:
      health_check:
        endpoint: "0.0.0.0:13133"

    service:
      extensions: [health_check]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [k8sattributes, batch]
          exporters: [debug, otlphttp]
        metrics:
          receivers: [otlp]
          processors: [k8sattributes, batch]
          {{- if include "isPrometheusExporterEnabled" . | trim | eq "true" }}
          exporters: [debug, otlphttp, prometheus]
          {{- else }}
          exporters: [debug, otlphttp]
          {{- end }}
        logs:
          receivers: [otlp]
          processors: [k8sattributes, batch]
          exporters: [otlphttp]
