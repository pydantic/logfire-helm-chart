{{- $secrets := list "logfire-jwt-secret" "logfire-meta-write-token" "logfire-meta-frontend-token" "logfire-dex-client-secret" }}
{{- if (not (get (get .Values "existingSecret" | default dict) "enabled")) }}
{{- range $secret := $secrets }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secret }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  {{- $secretObj := (lookup "v1" "Secret" $.Release.Namespace $secret ) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $secretVal := (get $secretData $secret ) | default (randAlphaNum 32 | b64enc) }}
  {{ $secret }}: {{ $secretVal | quote }}
{{- end }}
{{- end }}
{{- if not .Values.postgresSecret.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "logfire.postgresSecretName" . }}
  labels:
    {{- include "logfire.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
type: Opaque
data:
  postgresDsn: {{ .Values.postgresDsn | b64enc | quote }}
  postgresFFDsn: {{ .Values.postgresFFDsn | b64enc | quote }}
  {{- if .Values.legacyIngest.enabled }}
  postgresIngestDsn: {{ .Values.postgresIngestDsn | b64enc | quote }}
  {{- end }}
{{- end }}
