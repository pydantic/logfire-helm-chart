adminEmail: hello@example.dev

ingress:
  enabled: true
  tls: false
  hostname: logfire.example.com
  maildevHostname: maildev.example.com

objectStore:
  uri: s3://logfire
  env:
    AWS_ACCESS_KEY_ID: logfire-minio
    AWS_SECRET_ACCESS_KEY: logfire-minio
    AWS_ENDPOINT: http://logfire-minio:9000
    AWS_ALLOW_HTTP: "true"

dev:
  deployPostgres: true
  deployMinio: true
  deployMaildev: true

postgresSecret:
  enabled: true
  name: "pg-dsns"

existingSecret:
  enabled: true
  name: "logfire-tokens"

logfire-dex:
  config:
    storage:
      type: postgres
      config:
        host: logfire-postgresql
        port: 5432
        user: postgres
        database: dex
        password: postgres
        ssl:
          mode: disable
    staticClients: []
logfire-backend:
  pdb:
    minUnavailable: 1

logfire-ff-maintenance-worker:
  scratchVolume:
    storageClassName: standard
    storage: "1Gi"

logfire-ff-ingest:
  volumeClaimTemplates:
    storageClassName: standard
    storage: "1Gi"

legacyIngest:
  enabled: true

logfire-ff-compaction-worker:
  scratchVolume:
    storageClassName: standard
    storage: "1Gi"

postgresql:
  fullnameOverride: "logfire-postgresql"
  auth:
    postgresPassword: "postgres"
  primary:
    initdb:
      scripts:
        create_databases.sql: |
          CREATE DATABASE crud;
          CREATE DATABASE ingest;
          CREATE DATABASE dex;
          CREATE DATABASE ff;
    persistence:
      size: 10Gi
  image:
    debug: true

minio:
  fullnameOverride: "logfire-minio"
  auth:
    rootUser: logfire-minio
    rootPassword: logfire-minio
  persistence:
    mountPath: /data
    size: 32Gi
  command:
    - minio
  args:
    - server
    - /data
  lifecycleHooks:
    postStart:
      exec:
        command:
          - sh
          - -c
          - |
            # Wait for the server to start
            sleep 5
            # Create a bucket
            mc alias set local http://localhost:9000 logfire-minio logfire-minio
            mc mb local/logfire
            mc anonymous set public local/logfire
  containerPorts:
    api: 9000
  service:
    ports:
      api: 9000
