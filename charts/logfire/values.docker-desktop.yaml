adminEmail: engineering@pydantic.dev

image:
  pullPolicy: Never
  repository: ""
  tag: latest
  # @ignored
  workerImage: logfire-python-prod
  # @ignored
  backendImage: logfire-python-prod
  # @ignored
  frontendImage: logfire-frontend-prod
  # @ignored
  schedulerImage: logfire-python-prod
  # @ignored
  fusionfireImage: fusionfire-dev
  # @ignored
  dexImage: dex

objectStore:
  uri: s3://logfire
  env:
    # Defaults we configure for MinIO
    # Do NOT use this in production!
    # This does not talk to actual AWS,
    # we just use MinIO as an S3 compatible implementation
    # and pipe these env vars into our client.
    AWS_ACCESS_KEY_ID: logfire-minio
    AWS_SECRET_ACCESS_KEY: logfire-minio
    AWS_ENDPOINT: http://logfire-minio:9000
    AWS_ALLOW_HTTP: "true"

dev:
  deployPostgres: true
  deployMaildev: true
  deployMinio: true

postgresDsn: postgres://postgres:postgres@logfire-postgres:5432/crud
postgresFFDsn: postgres://postgres:postgres@logfire-postgres:5432/ff
postgresIngestDsn: postgres://postgres:postgres@logfire-postgres:5432/ingest

ingress:
  enabled: false
  tls: false
  # You should port-forward `logfire-service` to access logfire
  # If you use the SDK to send data set the `LOGFIRE_BASE_URL` env var for the SDK to `http://localhost:8080`
  hostname: localhost:8080
  maildevHostname: maildev.docker-desktop.local
  annotations: {}

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  readOnlyRootFilesystem: true

logfire-dex:
  config:
    connectors: []
    storage:
      type: postgres
      config:
        host: logfire-postgres
        port: 5432
        user: postgres
        database: dex
        password: postgres
        ssl:
          mode: disable
