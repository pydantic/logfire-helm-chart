{{- $serviceName := "logfire-ff-cache" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceName }}
  labels:
    {{- include "logfire.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $serviceName }}
spec:
  replicas: {{ dig "replicas" "1" (index .Values $serviceName | default dict) }}
  selector:
    matchLabels:
      {{- include "logfire.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ $serviceName }}
  template:
    metadata:
      labels:
        {{- include "logfire.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ $serviceName }}
      annotations:
        checksum/ff-config: {{ include (print $.Template.BasePath "/logfire-ff-config.yaml") . | sha256sum }}
        checksum/storage-config: {{ include (print $.Template.BasePath "/logfire-storage-config.yaml") . | sha256sum }}
    spec:
      {{- with .Values.serviceAccountName }}
      serviceAccountName: {{ . }}
      {{- end}}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . | quote }}
      {{- end }}
      {{- end }}
      {{- with (index .Values $serviceName | default dict).initContainers }}
      initContainers:
        {{- . | toYaml | nindent 8 }}
      {{- end}}
      containers:
        - name: {{ $serviceName }}
          image: '{{ .Values.image.repository | default "" }}{{ .Values.image.fusionfireImage }}:{{ .Values.image.tag }}'
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          {{- include "logfire.resources" (dict "Values" .Values "serviceName" $serviceName) | nindent 10 }}
          command:
            - fusionfire
            - cache
            - --host=0.0.0.0
            - --port=9001
          envFrom:
            - configMapRef:
                name: logfire-ff-config
            - configMapRef:
                name: logfire-storage-config
          env:
            - name: OTEL_SERVICE_NAME
              value: $serviceName
            - name: FF_CACHE_LOCAL_DIR
              value: /scratch
            {{- with (index .Values $serviceName | default dict).env }}
              {{- . | toYaml | nindent 12 }}
            {{- end}}
          volumeMounts:
            - name: cache-data
              mountPath: /scratch
          {{ if .Values.dev.hostObjectStore }}
            - name: storage-data
              mountPath: /storage
          {{ end }}
      volumes:
      {{ if .Values.dev.hostObjectStore }}
        - name: storage-data
          hostPath:
            path: /storage
      {{ end }}
        - name: cache-data
          persistentVolumeClaim:
            claimName: {{ $serviceName }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $serviceName }}
  labels:
    {{- include "logfire.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $serviceName }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage:  {{ dig "cacheStorage" "10Gi" (index .Values $serviceName | default dict) }}
{{- template "logfire.hpa" (dict "Values" .Values "serviceName" $serviceName) }}
