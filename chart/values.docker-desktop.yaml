adminEmail: engineering@pydantic.dev

image:
  pullPolicy: Never
  repository: ""
  tag: latest
  # @ignored
  workerImage: logfire-python-prod
  # @ignored
  backendImage: logfire-python-prod
  # @ignored
  frontendImage: logfire-frontend-prod
  # @ignored
  schedulerImage: logfire-python-prod
  # @ignored
  fusionfireImage: fusionfire-dev

objectStore:
  uri: file:///storage

dev:
  deployPostgres: true
  hostObjectStore: true
  deployMaildev: true

postgresDsn: postgres://postgres:postgres@logfire-postgres:5432/crud
postgresFFDsn: postgres://postgres:postgres@logfire-postgres:5432/ff
postgresIngestDsn: postgres://postgres:postgres@logfire-postgres:5432/ingest

ingress:
  enabled: true
  tls: false
  apiHostname: logfire-api.docker-desktop.local
  frontendHostname: logfire.docker-desktop.local
  maildevHostname: maildev.docker-desktop.local
  annotations: {}

securityContext: {}
  # runAsNonRoot: true
  # runAsUser: 1000
  # readOnlyRootFilesystem: true

dex:
  image:
    repository: "dex-dev"
    tag: latest
  config:
    issuer: http://dex.docker-desktop.local/dex
    storage:
      type: postgres
      config:
        host: logfire-postgres
        port: 5432
        user: postgres
        database: dex
        password: postgres
        ssl:
          mode: disable
    web:
      http: 0.0.0.0:5556
    grpc:
      addr: 0.0.0.0:5557
    staticClients:
      - id: logfire-backend
        name: Logfire Backend
        redirectURIs:
          - http://logfire.docker-desktop.local/auth/code-callback
          - http://logfire.docker-desktop.local/auth/link-provider-code-callback
        scopes:
          - openid
          - email
          - profile
        secret: $LOGFIRE_CLIENT_SECRET
    oauth2:
      skipApprovalScreen: true
      passwordConnector: local
    enablePasswordDB: true
    frontend:
      extra:
        logfire_frontend_host: http://logfire.docker-desktop.local